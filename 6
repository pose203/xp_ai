import React, { useState, useCallback } from 'react';
import { Sparkles, Moon, Star, Shuffle, Eye, Heart, Coins, Swords } from 'lucide-react';

// 塔罗牌数据
const TAROT_CARDS = {
  major: [
    { id: 0, name: '愚者', nameEn: 'The Fool', element: '风', meaning: '新开始、冒险、纯真、自发性', reverseMeaning: '鲁莽、缺乏计划、愚蠢行为' },
    { id: 1, name: '魔术师', nameEn: 'The Magician', element: '火', meaning: '意志力、技能、专注、表现', reverseMeaning: '操控、欺骗、缺乏技能' },
    { id: 2, name: '女祭司', nameEn: 'The High Priestess', element: '水', meaning: '直觉、潜意识、神秘、智慧', reverseMeaning: '缺乏直觉、秘密、忽视内在声音' },
    { id: 3, name: '皇后', nameEn: 'The Empress', element: '土', meaning: '母性、创造力、丰饶、自然', reverseMeaning: '创造力阻塞、依赖、空虚' },
    { id: 4, name: '皇帝', nameEn: 'The Emperor', element: '火', meaning: '权威、结构、控制、父性', reverseMeaning: '独裁、缺乏纪律、不负责任' },
    { id: 5, name: '教皇', nameEn: 'The Hierophant', element: '土', meaning: '传统、精神指导、教育、信仰', reverseMeaning: '反叛、非传统、自由思考' },
    { id: 6, name: '恋人', nameEn: 'The Lovers', element: '风', meaning: '爱情、选择、和谐、伙伴关系', reverseMeaning: '分离、错误选择、不和谐' },
    { id: 7, name: '战车', nameEn: 'The Chariot', element: '水', meaning: '意志力、胜利、控制、决心', reverseMeaning: '缺乏控制、失败、缺乏方向' },
    { id: 8, name: '力量', nameEn: 'Strength', element: '火', meaning: '内在力量、勇气、耐心、控制', reverseMeaning: '软弱、自我怀疑、缺乏勇气' },
    { id: 9, name: '隐者', nameEn: 'The Hermit', element: '土', meaning: '内省、寻找真理、指导、孤独', reverseMeaning: '孤立、拒绝帮助、迷失方向' },
    { id: 10, name: '命运之轮', nameEn: 'Wheel of Fortune', element: '火', meaning: '命运、变化、循环、机会', reverseMeaning: '厄运、缺乏控制、负面循环' },
    { id: 11, name: '正义', nameEn: 'Justice', element: '风', meaning: '公正、真理、法律、平衡', reverseMeaning: '不公正、不诚实、不负责任' },
    { id: 12, name: '倒吊人', nameEn: 'The Hanged Man', element: '水', meaning: '牺牲、放下、等待、新视角', reverseMeaning: '拖延、抗拒、无谓牺牲' }
  ],
  minor: {
    wands: [
      { id: 'w1', name: '权杖王牌', meaning: '新创意、灵感、成长机会', reverseMeaning: '缺乏方向、创意阻塞' },
      { id: 'w2', name: '权杖二', meaning: '计划、决策、个人力量', reverseMeaning: '缺乏计划、害怕冒险' },
      { id: 'w3', name: '权杖三', meaning: '扩展、远见、领导力', reverseMeaning: '缺乏远见、延迟' }
    ],
    cups: [
      { id: 'c1', name: '圣杯王牌', meaning: '新爱情、情感满足、灵性', reverseMeaning: '情绪阻塞、心灵空虚' },
      { id: 'c2', name: '圣杯二', meaning: '伙伴关系、爱情、和谐', reverseMeaning: '关系不平衡、分离' },
      { id: 'c3', name: '圣杯三', meaning: '友谊、庆祝、团体和谐', reverseMeaning: '社交问题、过度放纵' }
    ],
    swords: [
      { id: 's1', name: '宝剑王牌', meaning: '新想法、清晰思维、突破', reverseMeaning: '混乱、误解、缺乏清晰' },
      { id: 's2', name: '宝剑二', meaning: '艰难选择、平衡、僵局', reverseMeaning: '优柔寡断、信息不足' },
      { id: 's3', name: '宝剑三', meaning: '心碎、悲伤、背叛', reverseMeaning: '从痛苦中恢复、宽恕' }
    ],
    pentacles: [
      { id: 'p1', name: '钱币王牌', meaning: '新机会、物质显现、繁荣', reverseMeaning: '错失机会、缺乏计划' },
      { id: 'p2', name: '钱币二', meaning: '平衡、优先级、多任务', reverseMeaning: '失去平衡、过度承诺' },
      { id: 'p3', name: '钱币三', meaning: '团队合作、技能、工作', reverseMeaning: '缺乏团队合作、低质量工作' }
    ]
  }
};

// 牌阵配置
const SPREADS = {
  single: { name: '单张指引牌', cards: 1, positions: ['当前指引'] },
  three: { name: '过去现在未来', cards: 3, positions: ['过去', '现在', '未来'] },
  celtic: { name: '凯尔特十字', cards: 10, positions: ['现状', '挑战', '远因', '近因', '可能结果', '近期', '你的方法', '外在影响', '希望恐惧', '最终结果'] },
  relationship: { name: '关系解读', cards: 5, positions: ['你的感受', '对方感受', '关系现状', '挑战', '发展方向'] }
};

// 主组件
const TarotAgent = () => {
  const [currentStep, setCurrentStep] = useState('welcome');
  const [selectedSpread, setSelectedSpread] = useState(null);
  const [question, setQuestion] = useState('');
  const [drawnCards, setDrawnCards] = useState([]);
  const [isDrawing, setIsDrawing] = useState(false);
  const [showInterpretation, setShowInterpretation] = useState(false);

  // 处理问题输入
  const handleQuestionChange = useCallback((e) => {
    const value = e.target.value;
    setQuestion(value);
  }, []);

  // 随机抽取塔罗牌
  const drawCards = (count) => {
    const allCards = [...TAROT_CARDS.major, ...TAROT_CARDS.minor.wands, ...TAROT_CARDS.minor.cups, ...TAROT_CARDS.minor.swords, ...TAROT_CARDS.minor.pentacles];
    const shuffled = [...allCards].sort(() => Math.random() - 0.5);
    return shuffled.slice(0, count).map(card => ({
      ...card,
      reversed: Math.random() < 0.3, // 30% 概率为逆位
      position: null
    }));
  };

  // 开始抽牌
  const startReading = () => {
    setIsDrawing(true);
    setTimeout(() => {
      const cards = drawCards(selectedSpread.cards);
      const cardsWithPositions = cards.map((card, index) => ({
        ...card,
        position: selectedSpread.positions[index]
      }));
      setDrawnCards(cardsWithPositions);
      setIsDrawing(false);
      setCurrentStep('cards');
    }, 2000);
  };

  // 获取卡牌图标
  const getCardIcon = (card) => {
    if (card.id === 'w1' || card.id === 'w2' || card.id === 'w3') return <Sparkles className="w-8 h-8" />;
    if (card.id === 'c1' || card.id === 'c2' || card.id === 'c3') return <Heart className="w-8 h-8" />;
    if (card.id === 's1' || card.id === 's2' || card.id === 's3') return <Swords className="w-8 h-8" />;
    if (card.id === 'p1' || card.id === 'p2' || card.id === 'p3') return <Coins className="w-8 h-8" />;
    return <Star className="w-8 h-8" />;
  };

  // 欢迎界面
  const WelcomeScreen = () => (
    <div className="text-center space-y-8">
      <div className="relative">
        <div className="absolute inset-0 animate-pulse">
          <div className="w-32 h-32 mx-auto rounded-full bg-gradient-to-r from-purple-500/20 to-blue-500/20 blur-xl"></div>
        </div>
        <Moon className="w-24 h-24 mx-auto text-purple-300 relative z-10" />
      </div>
      
      <div className="space-y-4">
        <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-300 to-blue-300 bg-clip-text text-transparent">
          神秘塔罗解读
        </h1>
        <p className="text-gray-300 text-lg max-w-2xl mx-auto leading-relaxed">
          欢迎来到神秘的塔罗世界。在这里，古老的智慧将为你指引方向，
          揭示内心深处的答案。让塔罗牌成为你人生路上的明灯。
        </p>
      </div>

      <div className="space-y-6">
        <div>
          <label className="block text-purple-300 font-medium mb-3">请输入你想咨询的问题</label>
          <textarea
            value={question}
            onChange={handleQuestionChange}
            placeholder="例如：我在感情上应该如何选择？我的事业发展会如何？"
            className="w-full h-24 px-4 py-3 bg-gray-800/50 border border-purple-500/30 rounded-lg text-white placeholder-gray-400 focus:border-purple-400 focus:ring-2 focus:ring-purple-400/20 focus:outline-none transition-all resize-none"
            rows={3}
            autoComplete="off"
            spellCheck={false}
          />
        </div>

        <button
          onClick={() => setCurrentStep('spreads')}
          disabled={!question.trim()}
          className="px-8 py-3 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 disabled:from-gray-600 disabled:to-gray-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105 disabled:hover:scale-100 disabled:opacity-50"
        >
          开始占卜 <Sparkles className="inline w-5 h-5 ml-2" />
        </button>
      </div>
    </div>
  );

  // 选择牌阵界面
  const SpreadSelection = () => (
    <div className="space-y-8">
      <div className="text-center">
        <h2 className="text-3xl font-bold text-purple-300 mb-4">选择占卜牌阵</h2>
        <p className="text-gray-300">不同的牌阵适合不同类型的问题，请选择最符合你需求的牌阵</p>
      </div>

      <div className="grid md:grid-cols-2 gap-6">
        {Object.entries(SPREADS).map(([key, spread]) => (
          <div
            key={key}
            onClick={() => setSelectedSpread(spread)}
            className={`p-6 rounded-xl border-2 cursor-pointer transition-all duration-300 transform hover:scale-105 ${
              selectedSpread?.name === spread.name
                ? 'border-purple-400 bg-purple-500/20 shadow-lg shadow-purple-500/25'
                : 'border-gray-600 bg-gray-800/30 hover:border-purple-500/50'
            }`}
          >
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-xl font-semibold text-white">{spread.name}</h3>
              <div className="flex items-center space-x-1">
                {[...Array(spread.cards)].map((_, i) => (
                  <div key={i} className="w-3 h-4 bg-purple-400/60 rounded-sm"></div>
                ))}
              </div>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              使用 {spread.cards} 张牌进行解读
            </p>
            <div className="flex flex-wrap gap-2">
              {spread.positions.slice(0, 3).map((position, index) => (
                <span key={index} className="px-2 py-1 bg-purple-600/30 text-purple-200 rounded text-xs">
                  {position}
                </span>
              ))}
              {spread.positions.length > 3 && (
                <span className="px-2 py-1 bg-gray-600/30 text-gray-300 rounded text-xs">
                  +{spread.positions.length - 3}
                </span>
              )}
            </div>
          </div>
        ))}
      </div>

      {selectedSpread && (
        <div className="text-center">
          <button
            onClick={startReading}
            className="px-8 py-3 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105"
          >
            开始抽牌 <Shuffle className="inline w-5 h-5 ml-2" />
          </button>
        </div>
      )}
    </div>
  );

  // 抽牌动画界面
  const DrawingScreen = () => (
    <div className="text-center space-y-8">
      <div className="relative">
        <div className="absolute inset-0 animate-spin">
          <div className="w-40 h-40 mx-auto rounded-full border-4 border-transparent border-t-purple-400 border-r-blue-400"></div>
        </div>
        <div className="w-32 h-32 mx-auto bg-gradient-to-br from-purple-600 to-blue-600 rounded-lg flex items-center justify-center relative z-10">
          <Shuffle className="w-16 h-16 text-white animate-pulse" />
        </div>
      </div>
      
      <div className="space-y-4">
        <h2 className="text-3xl font-bold text-purple-300">正在为你抽取塔罗牌...</h2>
        <p className="text-gray-300 text-lg">请静心冥想你的问题，让宇宙的能量指引最适合的牌</p>
      </div>
    </div>
  );

  // 展示卡牌界面
  const CardsDisplay = () => (
    <div className="space-y-8">
      <div className="text-center">
        <h2 className="text-3xl font-bold text-purple-300 mb-2">你的塔罗解读</h2>
        <p className="text-gray-300">牌阵：{selectedSpread.name}</p>
        <div className="mt-4 p-4 bg-gray-800/50 rounded-lg">
          <p className="text-purple-200 font-medium">你的问题：</p>
          <p className="text-white mt-1">{question}</p>
        </div>
      </div>

      <div className={`grid gap-6 ${
        drawnCards.length === 1 ? 'grid-cols-1 max-w-sm mx-auto' :
        drawnCards.length <= 3 ? 'grid-cols-1 md:grid-cols-3' :
        drawnCards.length <= 5 ? 'grid-cols-2 md:grid-cols-3 lg:grid-cols-5' :
        'grid-cols-2 md:grid-cols-3 lg:grid-cols-5'
      }`}>
        {drawnCards.map((card, index) => (
          <div
            key={index}
            className="group relative bg-gradient-to-br from-gray-800 to-gray-900 rounded-xl p-6 border border-purple-500/30 hover:border-purple-400/60 transition-all duration-300 transform hover:scale-105"
          >
            <div className="text-center space-y-4">
              <div className="relative">
                <div className={`transition-transform duration-300 ${card.reversed ? 'rotate-180' : ''}`}>
                  {getCardIcon(card)}
                </div>
                {card.reversed && (
                  <div className="absolute -top-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center">
                    <span className="text-white text-xs font-bold">R</span>
                  </div>
                )}
              </div>
              
              <div>
                <h3 className="font-bold text-white text-lg">{card.name}</h3>
                {card.nameEn && (
                  <p className="text-purple-300 text-sm">{card.nameEn}</p>
                )}
                <p className="text-purple-200 text-sm mt-1 font-medium">{card.position}</p>
              </div>

              <div className="text-sm text-gray-300">
                <p className="font-medium text-purple-200 mb-1">
                  {card.reversed ? '逆位含义：' : '正位含义：'}
                </p>
                <p>{card.reversed ? card.reverseMeaning : card.meaning}</p>
                {card.element && (
                  <p className="mt-2 text-xs text-purple-300">元素：{card.element}</p>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>

      <div className="text-center space-y-4">
        <button
          onClick={() => setShowInterpretation(true)}
          className="px-8 py-3 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105"
        >
          查看整体解读 <Eye className="inline w-5 h-5 ml-2" />
        </button>
        
        <div className="flex justify-center space-x-4">
          <button
            onClick={() => {
              setCurrentStep('welcome');
              setQuestion('');
              setSelectedSpread(null);
              setDrawnCards([]);
              setShowInterpretation(false);
            }}
            className="px-6 py-2 border border-purple-500/50 text-purple-300 hover:bg-purple-500/20 rounded-lg transition-all"
          >
            重新占卜
          </button>
        </div>
      </div>

      {showInterpretation && (
        <div className="mt-8 p-6 bg-gradient-to-br from-purple-900/30 to-blue-900/30 rounded-xl border border-purple-500/30">
          <h3 className="text-2xl font-bold text-purple-300 mb-4 flex items-center">
            <Sparkles className="w-6 h-6 mr-2" />
            整体解读与建议
          </h3>
          
          <div className="space-y-4 text-gray-200 leading-relaxed">
            <p>
              根据你抽到的牌组，宇宙为你传达了重要的信息。这些牌的组合揭示了你当前状况的深层含义：
            </p>
            
            <div className="grid md:grid-cols-2 gap-4">
              <div className="p-4 bg-purple-800/20 rounded-lg">
                <h4 className="font-semibold text-purple-300 mb-2">能量分析</h4>
                <p className="text-sm">
                  {drawnCards.filter(c => !c.reversed).length > drawnCards.length / 2 
                    ? '你的能量流动整体是正向的，大部分牌都呈现积极的征象，表明你正处在一个有利的时期。'
                    : '当前你可能面临一些挑战，但这些都是成长的机会。逆位的牌提醒你需要从内在寻找答案。'
                  }
                </p>
              </div>
              
              <div className="p-4 bg-blue-800/20 rounded-lg">
                <h4 className="font-semibold text-blue-300 mb-2">行动建议</h4>
                <p className="text-sm">
                  保持内心的平静与清明，相信自己的直觉。无论遇到什么情况，都要记住这只是人生旅程中的一个阶段。
                  专注于当下，用心感受生活中的每一个细节。
                </p>
              </div>
            </div>
            
            <div className="text-center p-4 bg-gradient-to-r from-purple-800/20 to-blue-800/20 rounded-lg">
              <p className="font-medium text-purple-300 mb-2">塔罗智慧</p>
              <p className="text-sm italic">
                "塔罗不是预言未来的工具，而是帮助你更好地了解自己，做出明智选择的镜子。
                真正的力量始终在你心中。"
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900 text-white">
      {/* 背景装饰 */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse"></div>
        <div className="absolute top-3/4 right-1/4 w-96 h-96 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-purple-600 rounded-full mix-blend-multiply filter blur-xl opacity-5 animate-pulse"></div>
      </div>

      {/* 主要内容 */}
      <div className="relative z-10 container mx-auto px-4 py-8 max-w-6xl">
        {currentStep === 'welcome' && <WelcomeScreen />}
        {currentStep === 'spreads' && <SpreadSelection />}
        {currentStep === 'cards' && !isDrawing && <CardsDisplay />}
        {isDrawing && <DrawingScreen />}
      </div>

      {/* 底部装饰 */}
      <div className="fixed bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-purple-500 via-blue-500 to-purple-500 opacity-50"></div>
    </div>
  );
};

export default TarotAgent;